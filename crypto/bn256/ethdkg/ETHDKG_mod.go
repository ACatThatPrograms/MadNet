// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethdkg

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// EthdkgABI is the input ABI used to generate the binding from.
const EthdkgABI = "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"shared_key\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"shared_key_correctness_proof\",\"type\":\"uint256[2]\"}],\"name\":\"Dispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"key_share_G1\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"key_share_G1_correctness_proof\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256[4]\",\"name\":\"key_share_G2\",\"type\":\"uint256[4]\"}],\"name\":\"KeyShareSubmission\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"encrypted_shares\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[2][]\",\"name\":\"commitments\",\"type\":\"uint256[2][]\"}],\"name\":\"ShareDistribution\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[2][]\",\"name\":\"sigs\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"invArray\",\"type\":\"uint256[]\"}],\"name\":\"AggregateSignatures\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELTA_CONFIRM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DELTA_INCLUDE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"invArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"honestIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"dishonestIndices\",\"type\":\"uint256[]\"}],\"name\":\"Group_Accusation_GPKj\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"HashToG1\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"h\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"privK\",\"type\":\"uint256\"}],\"name\":\"Sign\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"sig\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"gpkj\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256[2]\",\"name\":\"sig\",\"type\":\"uint256[2]\"}],\"name\":\"Submit_GPKj\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"T_DISPUTE_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"T_GPKJ_DISPUTE_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"T_GPKJ_SUBMISSION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"T_KEY_SHARE_SUBMISSION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"T_MPK_SUBMISSION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"T_REGISTRATION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"T_SHARE_DISTRIBUTION_END\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256[2]\",\"name\":\"sig\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[4]\",\"name\":\"pubK\",\"type\":\"uint256[4]\"}],\"name\":\"Verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"v\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"honestIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"dishonestIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"checkIndices\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"validIndices\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"invArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"maxIndex\",\"type\":\"uint256\"}],\"name\":\"checkInverses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"commitments_1st_coefficient\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"encrypted_shares\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"commitments\",\"type\":\"uint256[2][]\"}],\"name\":\"distribute_shares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gpkj_dispute_check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gpkj_submission_check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gpkj_submissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initial_message\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"initial_signatures\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"is_malicious\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"key_share_submission_check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"key_shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"master_public_key\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mpk_submission_check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"num_nodes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"public_keys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"public_key\",\"type\":\"uint256[2]\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"safeSigningPoint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"share_dispute_check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"share_distribution_check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"share_distribution_hashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"issuer_list_idx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"disputer_list_idx\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"encrypted_shares\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"commitments\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256[2]\",\"name\":\"shared_key\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"shared_key_correctness_proof\",\"type\":\"uint256[2]\"}],\"name\":\"submit_dispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint256[2]\",\"name\":\"key_share_G1\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"key_share_G1_correctness_proof\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[4]\",\"name\":\"key_share_G2\",\"type\":\"uint256[4]\"}],\"name\":\"submit_key_share\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"_master_public_key\",\"type\":\"uint256[4]\"}],\"name\":\"submit_master_public_key\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// EthdkgBin is the compiled bytecode used for deploying new contracts.
var EthdkgBin = "0x7f43727970746f677261706879206973206772656174000000000000000000000060a09081526015608081905260b56040526200003f91600c9162000085565b503480156200004d57600080fd5b50601443818101600e55602d8101600f5560468101601055605f8101601155607881016012556091810160135560aa0190556200012a565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620000c857805160ff1916838001178555620000f8565b82800160010185558215620000f8579182015b82811115620000f8578251825591602001919060010190620000db565b50620001069291506200010a565b5090565b6200012791905b8082111562000106576000815560010162000111565b90565b614d28806200013a6000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c80639c2aa8381161013b578063dc5e8a0a116100b8578063eadfcadc1161007c578063eadfcadc14610f2c578063edf26d9b14610f52578063f022e06114610f8b578063f47ae6a91461116a578063fef001a9146111bc57610248565b8063dc5e8a0a14610de1578063dc614e2814610e5c578063e2291ec314610e64578063e480a92e14610e6c578063e651137814610f0f57610248565b8063ab63c722116100ff578063ab63c72214610d9b578063b6e8c6e614610da3578063c21bee8314610dab578063d1be7cc514610dd1578063d3cf618614610dd957610248565b80639c2aa838146109f0578063a080e5e0146109f8578063a687283314610b4d578063a88c9e1c14610cf2578063aa7bd33814610d1e57610248565b806359f3effc116101c957806380f4a9221161018d57806380f4a922146107a8578063836889dc146108cd57806392896b2d146108d557806395add79c1461090157806396d95a6f146109a557610248565b806359f3effc146105d95780636bdf477c146105e15780637163525e146106c25780637328f826146107745780637543b80f146107a057610248565b80630f21e5d8116102105780630f21e5d81461038c5780632cf4050b146103945780632f11b985146103c05780632f123ffc146103c85780633442af5c1461058e57610248565b806302cd04231461024d578063050a54f014610267578063063675871461028357806307f02c541461037c5780630de1553f14610384575b600080fd5b6102556111e8565b60408051918252519081900360200190f35b61026f6111ef565b604080519115158252519081900360200190f35b61026f600480360360e081101561029957600080fd5b810190602081018135600160201b8111156102b357600080fd5b8201836020820111156102c557600080fd5b803590602001918460018302840111600160201b831117156102e657600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080518082018252939695948181019493509150600290839083908082843760009201919091525050604080516080818101909252929594938181019392509060049083908390808284376000920191909152509194506111ff9350505050565b61025561137e565b610255611384565b61025561138a565b610255600480360360408110156103aa57600080fd5b506001600160a01b03813516906020013561138f565b61026f6113b1565b61058c60048036036101208110156103df57600080fd5b6001600160a01b038235169160208101359160408201359190810190608081016060820135600160201b81111561041557600080fd5b82018360208201111561042757600080fd5b803590602001918460208302840111600160201b8311171561044857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561049757600080fd5b8201836020820111156104a957600080fd5b803590602001918460408302840111600160201b831117156104ca57600080fd5b9190808060200260200160405190810160405280939291908181526020016000905b8282101561052a57604080518082018252908084028701906002908390839080828437600092019190915250505081526001909101906020016104ec565b505060408051808201825294979695818101959450925060029150839083908082843760009201919091525050604080518082018252929594938181019392509060029083908390808284376000920191909152509194506113ba9350505050565b005b61058c600480360360408110156105a457600080fd5b60408051808201825291830192918183019183906002908390839080828437600092019190915250919450611ab49350505050565b61026f611be0565b610687600480360360408110156105f757600080fd5b810190602081018135600160201b81111561061157600080fd5b82018360208201111561062357600080fd5b803590602001918460018302840111600160201b8311171561064457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505091359250611bf0915050565b6040518082600260200280838360005b838110156106af578181015183820152602001610697565b5050505090500191505060405180910390f35b61058c60048036036101208110156106d957600080fd5b6040805180820182526001600160a01b038435169392830192916060830191906020840190600290839083908082843760009201919091525050604080518082018252929594938181019392509060029083908390808284376000920191909152505060408051608081810190925292959493818101939250906004908390839080828437600092019190915250919450611c459350505050565b6102556004803603604081101561078a57600080fd5b506001600160a01b0381351690602001356120a4565b6102556120bd565b61026f600480360360608110156107be57600080fd5b810190602081018135600160201b8111156107d857600080fd5b8201836020820111156107ea57600080fd5b803590602001918460208302840111600160201b8311171561080b57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561085a57600080fd5b82018360208201111561086c57600080fd5b803590602001918460208302840111600160201b8311171561088d57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050913592506120c2915050565b61026f6121cb565b610255600480360360408110156108eb57600080fd5b506001600160a01b0381351690602001356121da565b6106876004803603602081101561091757600080fd5b810190602081018135600160201b81111561093157600080fd5b82018360208201111561094357600080fd5b803590602001918460018302840111600160201b8311171561096457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506121f3945050505050565b61026f600480360360408110156109bb57600080fd5b604080518082018252918301929181830191839060029083908390808284376000920191909152509194506122f99350505050565b610255612321565b61058c60048036036040811015610a0e57600080fd5b810190602081018135600160201b811115610a2857600080fd5b820183602082011115610a3a57600080fd5b803590602001918460208302840111600160201b83111715610a5b57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610aaa57600080fd5b820183602082011115610abc57600080fd5b803590602001918460408302840111600160201b83111715610add57600080fd5b9190808060200260200160405190810160405280939291908181526020016000905b82821015610b3d5760408051808201825290808402870190600290839083908082843760009201919091525050508152600190910190602001610aff565b5093965061232795505050505050565b61058c60048036036060811015610b6357600080fd5b810190602081018135600160201b811115610b7d57600080fd5b820183602082011115610b8f57600080fd5b803590602001918460208302840111600160201b83111715610bb057600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610bff57600080fd5b820183602082011115610c1157600080fd5b803590602001918460208302840111600160201b83111715610c3257600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610c8157600080fd5b820183602082011115610c9357600080fd5b803590602001918460208302840111600160201b83111715610cb457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506126af945050505050565b61025560048036036040811015610d0857600080fd5b506001600160a01b038135169060200135612c3e565b610d26612c57565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610d60578181015183820152602001610d48565b50505050905090810190601f168015610d8d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610255612ce5565b61026f612ceb565b61025560048036036020811015610dc157600080fd5b50356001600160a01b0316612cf9565b61026f612d0b565b610255612d1d565b61058c600480360360c0811015610df757600080fd5b81019080806080019060048060200260405190810160405280929190826004602002808284376000920191909152505060408051808201825292959493818101939250906002908390839080828437600092019190915250919450612d239350505050565b610255612f7b565b610255612f81565b61026f60048036036040811015610e8257600080fd5b810190602081018135600160201b811115610e9c57600080fd5b820183602082011115610eae57600080fd5b803590602001918460208302840111600160201b83111715610ecf57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505091359250612f87915050565b61025560048036036020811015610f2557600080fd5b503561303e565b61026f60048036036020811015610f4257600080fd5b50356001600160a01b0316613052565b610f6f60048036036020811015610f6857600080fd5b5035613067565b604080516001600160a01b039092168252519081900360200190f35b61068760048036036080811015610fa157600080fd5b810190602081018135600160201b811115610fbb57600080fd5b820183602082011115610fcd57600080fd5b803590602001918460408302840111600160201b83111715610fee57600080fd5b9190808060200260200160405190810160405280939291908181526020016000905b8282101561104e5760408051808201825290808402870190600290839083908082843760009201919091525050508152600190910190602001611010565b50939695946020810194503592505050600160201b81111561106f57600080fd5b82018360208201111561108157600080fd5b803590602001918460208302840111600160201b831117156110a257600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092958435959094909350604081019250602001359050600160201b8111156110f957600080fd5b82018360208201111561110b57600080fd5b803590602001918460208302840111600160201b8311171561112c57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061308e945050505050565b61058c6004803603608081101561118057600080fd5b81019080806080019060048060200260405190810160405280929190826004602002808284376000920191909152509194506131869350505050565b610255600480360360408110156111d257600080fd5b506001600160a01b03813516906020013561361d565b6000545b90565b600d546301000000900460ff1681565b6000611209614433565b611212856121f3565b90506113756040518061018001604052808660006002811061123057fe5b602002015181526020018660016002811061124757fe5b602002015181526020017f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81526020017f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec81526020017f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d8152602001836000600281106112f657fe5b602002015181526020018360016002811061130d57fe5b602002015181526020018560006004811061132457fe5b602002015181526020018560016004811061133b57fe5b602002015181526020018560026004811061135257fe5b602002015181526020018560036004811061136957fe5b60200201519052613636565b95945050505050565b60125481565b600e5481565b601481565b600360205281600052604060002081600281106113a857fe5b01549150829050565b600d5460ff1681565b43600f541080156113cd57506010544311155b6114085760405162461bcd60e51b81526004018080602001828103825260318152602001806147a96031913960400191505060405180910390fd5b866001600160a01b03166000878154811061141f57fe5b6000918252602090912001546001600160a01b031614801561146a5750336001600160a01b03166000868154811061145357fe5b6000918252602090912001546001600160a01b0316145b6114a55760405162461bcd60e51b81526004018080602001828103825260258152602001806149116025913960400191505060405180910390fd5b6001600160a01b0387166000908152600260205260409020546114c757611aab565b838360405160200180838051906020019060200280838360005b838110156114f95781810151838201526020016114e1565b505050509050018280516000925b8184101561154957602080850284010151604080838360005b83811015611538578181015183820152602001611520565b505050509050019260010192611507565b92505050925050506040516020818303038152906040528051906020012060026000896001600160a01b03166001600160a01b0316815260200190815260200160002054146115c95760405162461bcd60e51b81526004018080602001828103825260368152602001806146026036913960400191505060405180910390fd5b604080518082018252600180825260026020808401829052336000908152929052908390208351808501948590526116639490929082845b81548152602001906001019080831161160157505050506001600160a01b038b166000908152600160205260409081902081518083019283905292509060029082845b81548152602001906001019080831161164457505050505085856136ae565b61169e5760405162461bcd60e51b815260040180806020018281038252602c81526020018061497d602c913960400191505060405180910390fd5b600060018601878710156116c7578587815181106116b857fe5b602002602001015191506116e1565b8560018803815181106116d657fe5b602002602001015191505b835160408051602081810193909352808201849052815180820383018152606090910190915280519101209182189181611719614433565b8760008151811061172657fe5b60200260200101519050611738614433565b6117a560405180606001604052808b60018151811061175357fe5b602002602001015160006002811061176757fe5b602002015181526020018b60018151811061177e57fe5b602002602001015160016002811061179257fe5b60200201518152602001858152506139dc565b90506118136040518060800160405280846000600281106117c257fe5b60200201518152602001846001600281106117d957fe5b60200201518152602001836000600281106117f057fe5b602002015181526020018360016002811061180757fe5b60200201519052613a36565b915060025b895181101561190c576000805160206149a983398151915286850993506118a060405180606001604052808c848151811061184f57fe5b602002602001015160006002811061186357fe5b602002015181526020018c848151811061187957fe5b602002602001015160016002811061188d57fe5b60200201518152602001868152506139dc565b91506119026040518060800160405280856000600281106118bd57fe5b60200201518152602001856001600281106118d457fe5b60200201518152602001846000600281106118eb57fe5b602002015181526020018460016002811061180757fe5b9250600101611818565b5061193260405180606001604052806001815260200160028152602001888152506139dc565b8051835191925014158061194e57506020808201519083015114155b15611a7c57600260008e6001600160a01b03166001600160a01b03168152602001908152602001600020600090556001600760008f6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507fad88e924a254a8563c3f1c2ec3ba397eb38279116fed134720febaeb0d3f60218d338a8a60405180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183600260200280838360005b83811015611a37578181015183820152602001611a1f565b5050505090500182600260200280838360005b83811015611a62578181015183820152602001611a4a565b5050505090500194505050505060405180910390a1611aa4565b33600090815260026020908152604080832083905560079091529020805460ff191660011790555b5050505050505b50505050505050565b600e54431115611af55760405162461bcd60e51b815260040180806020018281038252603b8152602001806146e7603b913960400191505060405180910390fd5b3360009081526001602052604090205415611b415760405162461bcd60e51b815260040180806020018281038252603d815260200180614511603d913960400191505060405180910390fd5b611b4a81613aa0565b611b855760405162461bcd60e51b815260040180806020018281038252603681526020018061481b6036913960400191505060405180910390fd5b60008054600181810183557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910180546001600160a01b03191633908117909155825260205260409020611bdc90826002614451565b5050565b600d54600160201b900460ff1681565b611bf8614433565b611c00614433565b611c09846121f3565b9050611c3d604051806060016040528083600060028110611c2657fe5b602002015181526020018360016002811061179257fe5b949350505050565b43601054108015611c5857506011544311155b611c935760405162461bcd60e51b8152600401808060200182810382526045815260200180614b036045913960600191505060405180910390fd5b6001600160a01b03841660009081526004602052604090205415611cb65761209e565b6001600160a01b038416600090815260026020526040902054611d0a5760405162461bcd60e51b81526004018080602001828103825260328152602001806149c96032913960400191505060405180910390fd5b6040805180820182527f062a0ad5cf656709286b38ae4fb927fc901c5f9cf9623bfd0b6d22d30f95a1f381527f1b4af7018d896f006d7e5c23d05903b5d2698da94674e546e51f77b6df70ffac602080830191909152825180840184526001815260028183018190526001600160a01b0389166000908152600390935291849020845180860195869052611dbf9589949192919082845b815481526020019060010190808311611da1575050505050866136ae565b611dfa5760405162461bcd60e51b8152600401808060200182810382526034815260200180614a9a6034913960400191505060405180910390fd5b611f6d60405180610180016040528085600060028110611e1657fe5b6020020151815260200185600160028110611e2d57fe5b602002015181526020017f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81526020017f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec81526020017f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d81526020017f062a0ad5cf656709286b38ae4fb927fc901c5f9cf9623bfd0b6d22d30f95a1f381526020017f1b4af7018d896f006d7e5c23d05903b5d2698da94674e546e51f77b6df70ffac815260200183600060048110611f2857fe5b6020020151815260200183600160048110611f3f57fe5b6020020151815260200183600260048110611f5657fe5b602002015181526020018360036004811061136957fe5b611fa85760405162461bcd60e51b81526004018080602001828103825260348152602001806147756034913960400191505060405180910390fd5b6001600160a01b0384166000908152600460205260409020611fcc90846002614451565b507fb0ee36c3780de716eb6c83687f433ae2558a6923e090fd238b657fb6c896badc8484848460405180856001600160a01b03166001600160a01b0316815260200184600260200280838360005b8381101561203257818101518382015260200161201a565b5050505090500183600260200280838360005b8381101561205d578181015183820152602001612045565b5050505090500182600460200280838360005b83811015612088578181015183820152602001612070565b5050505090500194505050505060405180910390a15b50505050565b600660205281600052604060002081600281106113a857fe5b600581565b600160008080846120cf57fe5b61010085106120da57fe5b600092505b8651831015612146578683815181106120f457fe5b60200260200101519050806000148061210c57508481115b1561211a5760009350612146565b6001811b821661213257806001901b8217915061213b565b60009350612146565b6001909201916120df565b8361215457506121c4915050565b600092505b85518310156121c05785838151811061216e57fe5b60200260200101519050806000148061218657508481115b1561219457600093506121c0565b6001811b82166121ac57806001901b821791506121b5565b600093506121c0565b600190920191612159565b5050505b9392505050565b600d5462010000900460ff1681565b600160205281600052604060002081600281106113a857fe5b6121fb614433565b600061220c8382600160f81b613ae0565b9050600061222384600160f91b600360f81b613ae0565b905061222d614433565b61223683613c57565b9050612240614433565b61224983613c57565b90506122666040518060800160405280846000600281106117c257fe5b945061227185613aa0565b6122ac5760405162461bcd60e51b81526004018080602001828103825260298152602001806145956029913960400191505060405180910390fd5b6122b5856122f9565b6122f05760405162461bcd60e51b815260040180806020018281038252602a815260200180614a3b602a913960400191505060405180910390fd5b50505050919050565b8051600090158061230b575081516001145b156123185750600061231c565b5060015b919050565b60135481565b600054600380820490600280830291830284031415612344576001015b43600e541080156123575750600f544311155b6123925760405162461bcd60e51b815260040180806020018281038252604781526020018061454e6047913960600191505060405180910390fd5b336000908152600160205260409020546123dd5760405162461bcd60e51b815260040180806020018281038252603f815260200180614bea603f913960400191505060405180910390fd5b6001830385511461241f5760405162461bcd60e51b81526004018080602001828103825260478152602001806149366047913960600191505060405180910390fd5b806001018451146124615760405162461bcd60e51b815260040180806020018281038252603b815260200180614c54603b913960400191505060405180910390fd5b600091505b8082116124cf5761248984838151811061247c57fe5b6020026020010151613aa0565b6124c45760405162461bcd60e51b8152600401808060200182810382526035815260200180614cbe6035913960400191505060405180910390fd5b600182019150612466565b848460405160200180838051906020019060200280838360005b838110156125015781810151838201526020016124e9565b505050509050018280516000925b8184101561255157602080850284010151604080838360005b83811015612540578181015183820152602001612528565b50505050905001926001019261250f565b60408051601f1981840301815291815281516020928301203360009081526002909352908220558a518b97509095501515935061258e9250505057fe5b602090810291909101810151336000908152600390925260409091206125b5916002614451565b507f92d8d3649e1b955ecb304c5fdd720088e7ec87cb18b50a75616b12600f455c6b33868660405180846001600160a01b03166001600160a01b031681526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561263657818101518382015260200161261e565b505050509050018381038252848181518152602001915080516000925b8184101561269557602080850284010151604080838360005b8381101561268457818101518382015260200161266c565b505050509050019260010192612653565b925050509550505050505060405180910390a15050505050565b436013541080156126c257506014544311155b6126fd5760405162461bcd60e51b81526004018080602001828103825260418152602001806147da6041913960600191505060405180910390fd5b6000546003808204916002808402928402909103141561271b576001015b806001018451101561275e5760405162461bcd60e51b815260040180806020018281038252602b815260200180614c29602b913960400191505060405180910390fd5b61276e84846000805490506120c2565b6127a95760405162461bcd60e51b81526004018080602001828103825260408152602001806149fb6040913960400191505060405180910390fd5b60608160010167ffffffffffffffff811180156127c557600080fd5b506040519080825280602002602001820160405280156127ff57816020015b6127ec614433565b8152602001906001900390816127e45790505b50905060608260010167ffffffffffffffff8111801561281e57600080fd5b50604051908082528060200260200182016040528015612848578160200160208202803683370190505b50905060008061285d89600080549050612f87565b6128985760405162461bcd60e51b815260040180806020018281038252602a81526020018061488b602a913960400191505060405180910390fd5b600095505b8460010186101561295a578786815181106128b457fe5b60200260200101519150600060018303815481106128ce57fe5b6000918252602080832091909101546001600160a01b03168083526006909152604091829020825180840193849052919350909160029082845b81548152602001906001019080831161290857505050505084878151811061292c57fe5b60200260200101819052508183878151811061294457fe5b602090810291909101015260019095019461289d565b612962614433565b61296e8585888d61308e565b600c805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152939450612a359392918301828280156129fb5780601f106129d0576101008083540402835291602001916129fb565b820191906000526020600020905b8154815290600101906020018083116129de57829003601f168201915b505060408051608081019182905287945092506008915060049082845b815481526020019060010190808311612a185750505050506111ff565b612a705760405162461bcd60e51b8152600401808060200182810382526035815260200180614a656035913960400191505060405180910390fd5b600096505b8751871015612c3257878781518110612a8a57fe5b6020026020010151925060006001840381548110612aa457fe5b9060005260206000200160009054906101000a90046001600160a01b0316915082848781518110612ad157fe5b6020908102919091018101919091526001600160a01b038316600090815260069091526040908190208151808301928390529160029082845b815481526020019060010190808311612b0a575050505050858781518110612b2e57fe5b6020026020010181905250612b458585888d61308e565b600c805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152939450612ba79392918301828280156129fb5780601f106129d0576101008083540402835291602001916129fb565b612bf4576001600160a01b0382166000908152600560205260408120612bcc9161448f565b6001600160a01b0382166000908152600760205260409020805460ff19166001179055612c27565b336000908152600560205260408120612c0c9161448f565b336000908152600760205260409020805460ff191660011790555b600190960195612a75565b50505050505050505050565b600460205281600052604060002081600281106113a857fe5b600c805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612cdd5780601f10612cb257610100808354040283529160200191612cdd565b820191906000526020600020905b815481529060010190602001808311612cc057829003601f168201915b505050505081565b60145481565b600d54610100900460ff1681565b60026020526000908152604090205481565b600d5465010000000000900460ff1681565b60105481565b43601254108015612d3657506013544311155b612d715760405162461bcd60e51b815260040180806020018281038252604581526020018061465c6045913960600191505060405180910390fd5b33600090815260056020526040902054158015612d9e575033600090815260056020526040902060010154155b8015612dba575033600090815260056020526040902060020154155b8015612dd6575033600090815260056020526040902060030154155b612e115760405162461bcd60e51b815260040180806020018281038252602f815260200180614c8f602f913960400191505060405180910390fd5b612e1a81613aa0565b612e6b576040805162461bcd60e51b815260206004820181905260248201527f496e76616c6964207369676e617475726520286e6f74206f6e20637572766529604482015290519081900360640190fd5b600c8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152612f049390929091830182828015612ef85780601f10612ecd57610100808354040283529160200191612ef8565b820191906000526020600020905b815481529060010190602001808311612edb57829003601f168201915b505050505082846111ff565b612f3f5760405162461bcd60e51b815260040180806020018281038252604a815260200180614b7c604a913960600191505060405180910390fd5b336000908152600560205260409020612f5a908360046144ab565b50336000908152600660205260409020612f7690826002614451565b505050565b600f5481565b60115481565b6000808080600185612f9557fe5b8651600187031115612fd85760405162461bcd60e51b81526004018080602001828103825260448152602001806145be6044913960600191505060405180910390fd5b600193505b8584101561303457866001850381518110612ff457fe5b602002602001015192506000805160206149a98339815191528061301457fe5b83850991508160011461302957506000613034565b600190930192612fdd565b9695505050505050565b6008816004811061304b57fe5b0154905081565b60076020526000908152604090205460ff1681565b6000818154811061307457fe5b6000918252602090912001546001600160a01b0316905081565b613096614433565b83518551146130d65760405162461bcd60e51b8152600401808060200182810382526035815260200180614ace6035913960400191505060405180910390fd5b828551116131155760405162461bcd60e51b815260040180806020018281038252603a815260200180614851603a913960400191505060405180910390fd5b600061312085613f94565b905061312c8382612f87565b6131675760405162461bcd60e51b815260040180806020018281038252602a81526020018061488b602a913960400191505060405180910390fd5b61316f614433565b61317b87878787614004565b979650505050505050565b4360115410801561319957506012544311155b6131d45760405162461bcd60e51b81526004018080602001828103825260468152602001806146a16046913960600191505060405180910390fd5b6008541515806131e5575060095415155b806131f15750600a5415155b806131fd5750600b5415155b156132075761361a565b6000805490805b6000828154811061321b57fe5b600091825260209091200154600192909201916001600160a01b03169050828210801561325e57506001600160a01b038116600090815260026020526040902054155b61320e5761326a614433565b6001600160a01b038216600090815260046020526040908190208151808301928390529160029082845b8154815260200190600101908083116132945750505050509050806000600281106132bb57fe5b60200201516132fb5760405162461bcd60e51b81526004018080602001828103825260308152602001806148e16030913960400191505060405180910390fd5b613303614433565b6001600160a01b038316600090815260046020526040908190208151808301928390529160029082845b81548152602001906001019080831161332d57505050505090505b8484101561345f576000848154811061335d57fe5b60009182526020808320909101546001600160a01b0316808352600290915260409091205490935061338e57613454565b6001600160a01b038316600090815260046020526040908190208151808301928390529160029082845b8154815260200190600101908083116133b85750505050509150816000600281106133df57fe5b602002015161341f5760405162461bcd60e51b81526004018080602001828103825260308152602001806148e16030913960400191505060405180910390fd5b61345160405180608001604052808360006002811061343a57fe5b60200201518152602001836001600281106118d457fe5b90505b600184019350613348565b6135d26040518061018001604052808360006002811061347b57fe5b602002015181526020018360016002811061349257fe5b602002015181526020017f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81526020017f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec81526020017f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d81526020017f062a0ad5cf656709286b38ae4fb927fc901c5f9cf9623bfd0b6d22d30f95a1f381526020017f1b4af7018d896f006d7e5c23d05903b5d2698da94674e546e51f77b6df70ffac81526020018860006004811061358d57fe5b60200201518152602001886001600481106135a457fe5b60200201518152602001886002600481106135bb57fe5b602002015181526020018860036004811061136957fe5b61360d5760405162461bcd60e51b81526004018080602001828103825260338152602001806147226033913960400191505060405180910390fd5b611aab60088760046144ab565b50565b600560205281600052604060002081600481106113a857fe5b60006136406144d8565b6000602082610180866008600019fa9050806136a3576040805162461bcd60e51b815260206004820152601d60248201527f656c6c69707469632063757276652070616972696e67206661696c6564000000604482015290519081900360640190fd5b505160011492915050565b60006136b8614433565b6136c0614433565b61371560405180606001604052808a6000600281106136db57fe5b602002015181526020018a6001600281106136f257fe5b602002015181526020018660016002811061370957fe5b602002015190526139dc565b915061376060405180606001604052808960006002811061373257fe5b602002015181526020018960016002811061374957fe5b602002015181526020018660006002811061370957fe5b905061376a614433565b6137856040518060800160405280856000600281106118bd57fe5b90506137d06040518060600160405280896000600281106137a257fe5b60200201518152602001896001600281106137b957fe5b602002015181526020018760016002811061370957fe5b925061381b6040518060600160405280886000600281106137ed57fe5b602002015181526020018860016002811061380457fe5b602002015181526020018760006002811061370957fe5b9150613825614433565b61388560405180608001604052808660006002811061384057fe5b602002015181526020018660016002811061385757fe5b602002015181526020018560006002811061386e57fe5b602002015181526020018560016002811061180757fe5b905060008a8a8a8a86866040516020018087600260200280838360005b838110156138ba5781810151838201526020016138a2565b5050505090500186600260200280838360005b838110156138e55781810151838201526020016138cd565b5050505090500185600260200280838360005b838110156139105781810151838201526020016138f8565b5050505090500184600260200280838360005b8381101561393b578181015183820152602001613923565b5050505090500183600260200280838360005b8381101561396657818101518382015260200161394e565b5050505090500182600260200280838360005b83811015613991578181015183820152602001613979565b5050505090500196505050505050506040516020818303038152906040528051906020012060001c9050866000600281106139c857fe5b6020020151149a9950505050505050505050565b6139e4614433565b60006040826060856007600019fa905080613a305760405162461bcd60e51b8152600401808060200182810382526024815260200180614bc66024913960400191505060405180910390fd5b50919050565b613a3e614433565b60006040826080856006600019fa905080613a30576040805162461bcd60e51b815260206004820152601e60248201527f656c6c6970746963206375727665206164646974696f6e206661696c65640000604482015290519081900360640190fd5b8051600090600080516020614755833981519152906003908290819080098551090860208301516000805160206147558339815191529080091492915050565b600080838560405160200180836001600160f81b0319166001600160f81b031916815260010182805190602001908083835b60208310613b315780518252601f199092019160209182019101613b12565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040528051906020012060001c90506000838660405160200180836001600160f81b0319166001600160f81b031916815260010182805190602001908083835b60208310613bc25780518252601f199092019160209182019101613ba3565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040528051906020012060001c905060008051602061475583398151915280613c1957fe5b816000805160206147558339815191527f0e0a77c19a07df2f666ea36f7879462c0a78eb28f5c70b3dd35d438dc58f0d9d8509089695505050505050565b613c5f614433565b6000808060008051602061475583398151915285860992506000805160206147558339815191526004840891506000805160206147558339815191528284099050613ca981614190565b9050600060008051602061475583398151915283840990506000805160206147558339815191528382099050600080516020614755833981519152848509935060006000805160206147558339815191528577b3c4d79d41a91759a9e4c7e359b6b89eaec68e62effffffd0990506000805160206147558339815191528382099050613d34816141d1565b90506000805160206147558339815191527759e26bcea0d48bacd4f263f1acdb5c4f5763473177fffffe820890506000600080516020614755833981519152600183089050613d82816141d1565b90506000600080516020614755833981519152847f2042def740cbc01bd03583cf0100e593ba56470b9af68708d2c05d64905353850990506000805160206147558339815191528582099050613dd7816141d1565b90506000805160206147558339815191526001820890506000600080516020614755833981519152848509905060008051602061475583398151915284820990506000805160206147558339815191526003820890506000613e38826141f4565b9050600080516020614755833981519152848509915060008051602061475583398151915284830991506000805160206147558339815191526003830891506000613e82836141f4565b905060016004600219830160001985010205810190600090821415613ea8575086613ebb565b8160021415613eb8575085613ebb565b50845b60008051602061475583398151915281820994506000805160206147558339815191528186099450600080516020614755833981519152600386089450613f0185614252565b94506000613f0e8f61428d565b90506000805160206147558339815191528187099550613f41604051806040016040528084815260200188815250613aa0565b613f7c5760405162461bcd60e51b81526004018080602001828103825260248152602001806146386024913960400191505060405180910390fd5b508c5250505060208901525095979650505050505050565b6000815160001415613fa85750600061231c565b60008083600081518110613fb857fe5b602002602001015190506000600190505b8451811015613ffc57848181518110613fde57fe5b6020026020010151925081831115613ff4578291505b600101613fc9565b509392505050565b61400c614433565b835185511461404c5760405162461bcd60e51b815260040180806020018281038252602c8152602001806148b5602c913960400191505060405180910390fd5b614054614433565b600080825260208201819052808080808061406d614433565b600096505b8b5187101561417f578b878151811061408757fe5b602002602001015194508a87111561409e5761417f565b60019250600095505b8b5186101561410d578b86815181106140bc57fe5b602002602001015193508a8611156140d35761410d565b848414156140e057614102565b6140eb84868c6142de565b91506000805160206149a983398151915282840992505b6001909501946140a7565b8c878151811061411957fe5b6020026020010151905061413e604051806060016040528083600060028110611c2657fe5b905061417260405180608001604052808a60006002811061415b57fe5b602002015181526020018a6001600281106117d957fe5b9750600190960195614072565b50959b9a5050505050505050505050565b60006141cb827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd456000805160206147558339815191526143a8565b92915050565b6000816141e05750600061231c565b506000805160206147558339815191520390565b600080614230837f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea36000805160206147558339815191526143a8565b9050801561424957600181600116600202039150613a30565b50600092915050565b60006141cb827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526000805160206147558339815191526143a8565b60017f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea382111561231c57507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd46919050565b60008284141561431f5760405162461bcd60e51b8152600401808060200182810382526034815260200180614b486034913960400191505060405180910390fd5b83600084821115614333575083850361436c565b6000805160206149a98339815191527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000083099150508484035b83600182038151811061437b57fe5b602002602001015190506000805160206149a98339815191528061439b57fe5b8183099695505050505050565b60008060405160208152602080820152602060408201528560608201528460808201528360a082015260208160c08360055afa90519250905080613ffc576040805162461bcd60e51b815260206004820152601d60248201527f6d6f64756c6172206578706f6e656e74696174696f6e2066616c696564000000604482015290519081900360640190fd5b60405180604001604052806002906020820280368337509192915050565b826002810192821561447f579160200282015b8281111561447f578251825591602001919060010190614464565b5061448b9291506144f6565b5090565b5060008155600101600081556001016000815560010160009055565b826004810192821561447f579160200282018281111561447f578251825591602001919060010190614464565b60405180602001604052806001906020820280368337509192915050565b6111ec91905b8082111561448b57600081556001016144fc56fe726567697374726174696f6e206661696c656420286163636f756e7420616c726561647920726567697374657265642061207075626c6963206b657929736861726520646973747269627574696f6e206661696c65642028636f6e7472616374206973206e6f7420696e20736861726520646973747269627574696f6e20706861736529496e76616c6964206861736820706f696e743a206e6f74206f6e20656c6c6970746963206375727665636865636b496e7665727365733a20696e73756666696369656e7420696e76657273657320666f722067726f7570207369676e61747572652063616c63756c6174696f6e64697370757465206661696c65642028696e76616c6964207265706c6179206f662073686172696e67207472616e73616374696f6e29496e76616c696420706f696e743a206e6f74206f6e20656c6c697074696320637572766567706b6a206b6579207375626d697373696f6e206661696c65642028636f6e7472616374206973206e6f7420696e2067706b6a2064657269766174696f6e207068617365296d6173746572206b6579207375626d697373696f6e206661696c65642028636f6e7472616374206973206e6f7420696e206d706b2064657269766174696f6e20706861736529726567697374726174696f6e206661696c65642028636f6e7472616374206973206e6f7420696e20726567697374726174696f6e207068617365296d6173746572206b6579207375626d697373696f6e206661696c6564202870616972696e6720636865636b206661696c65642930644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476b6579207368617265207375626d697373696f6e206661696c65642028696e76616c6964206b657920736861726520284732292964697370757465206661696c65642028636f6e7472616374206973206e6f7420696e20646973707574652070686173652967706b6a2061636375736174696f6e206661696c65642028636f6e7472616374206973206e6f7420696e2067706b6a2061636375736174696f6e20706861736529726567697374726174696f6e206661696c656420287075626c6963206b6579206e6f74206f6e20656c6c6970746963206375727665294661696c656420746f206d656574207265717569726564206e756d626572206f66207369676e61747572657320666f72207468726573686f6c64696e76417272617920646f6573206e6f7420696e636c75646520636f727265637420696e7665727365734d69736d61746368206265747765656e20706f696e7473473120616e6420696e6469636573206172726179736d6173746572206b6579207375626d697373696f6e206661696c656420286b6579207368617265206d697373696e672964697370757465206661696c65642028696e76616c6964206c69737420696e646963657329736861726520646973747269627574696f6e206661696c65642028696e76616c6964206e756d626572206f6620656e63727970746564207368617265732070726f76696465642964697370757465206661696c65642028696e76616c696420736861726564206b6579206f722070726f6f662930644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016b6579207368617265207375626d697373696f6e206661696c65642028697373756572206e6f74207175616c696669656429686f6e657374496e646963657320616e6420646973686f6e657374496e646963657320646f206e6f7420636f6e7461696e20756e6971756520696e646963657344616e6765726f7573206861736820706f696e743a206e6f74207361666520666f72207369676e696e67686f6e657374496e6469636573206661696c656420746f2070726f647563652076616c69642067726f7570207369676e61747572656b6579207368617265207375626d697373696f6e206661696c65642028696e76616c6964206b65792073686172652028473129294d69736d61746368206265747765656e206c656e677468206f66207369676e61747572657320616e6420696e6465782061727261796b6579207368617265207375626d697373696f6e206661696c65642028636f6e7472616374206973206e6f7420696e206b65792064657269766174696f6e207068617365294d7573742068617665206b20213d206a207768656e20636f6d707574696e6720526a207061727469616c20636f6e7374616e747347504b6a207375626d697373696f6e206661696c656420287369676e617475726520766572696669636174696f6e206661696c65642064756520746f20696e76616c69642067706b6a29656c6c6970746963206375727665206d756c7469706c69636174696f6e206661696c6564736861726520646973747269627574696f6e206661696c65642028657468657265756d206163636f756e7420686173206e6f74207265676973746572656429496e636f7272656374206e756d626572206f6620686f6e6573742076616c696461746f72733b20657869746b65792073686172696e67206661696c65642028696e76616c6964206e756d626572206f6620636f6d6d69746d656e74732070726f76696465642947504b6a207375626d697373696f6e206661696c65642028616c7265616479207375626d69747465642067706b6a296b65792073686172696e67206661696c65642028636f6d6d69746d656e74206e6f74206f6e20656c6c697074696320637572766529a264697066735822122089023260c5d4056310ae5ac7a80f697f8d855ba92c71a27201cf5452ea7f83a164736f6c63430006090033"

// DeployEthdkg deploys a new Ethereum contract, binding an instance of Ethdkg to it.
func DeployEthdkg(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Ethdkg, error) {
	parsed, err := abi.JSON(strings.NewReader(EthdkgABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(EthdkgBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Ethdkg{EthdkgCaller: EthdkgCaller{contract: contract}, EthdkgTransactor: EthdkgTransactor{contract: contract}, EthdkgFilterer: EthdkgFilterer{contract: contract}}, nil
}

// Ethdkg is an auto generated Go binding around an Ethereum contract.
type Ethdkg struct {
	EthdkgCaller     // Read-only binding to the contract
	EthdkgTransactor // Write-only binding to the contract
	EthdkgFilterer   // Log filterer for contract events
}

// EthdkgCaller is an auto generated read-only Go binding around an Ethereum contract.
type EthdkgCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// EthdkgTransactor is an auto generated write-only Go binding around an Ethereum contract.
type EthdkgTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// EthdkgFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type EthdkgFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// EthdkgSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type EthdkgSession struct {
	Contract     *Ethdkg           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// EthdkgCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type EthdkgCallerSession struct {
	Contract *EthdkgCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// EthdkgTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type EthdkgTransactorSession struct {
	Contract     *EthdkgTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// EthdkgRaw is an auto generated low-level Go binding around an Ethereum contract.
type EthdkgRaw struct {
	Contract *Ethdkg // Generic contract binding to access the raw methods on
}

// EthdkgCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type EthdkgCallerRaw struct {
	Contract *EthdkgCaller // Generic read-only contract binding to access the raw methods on
}

// EthdkgTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type EthdkgTransactorRaw struct {
	Contract *EthdkgTransactor // Generic write-only contract binding to access the raw methods on
}

// NewEthdkg creates a new instance of Ethdkg, bound to a specific deployed contract.
func NewEthdkg(address common.Address, backend bind.ContractBackend) (*Ethdkg, error) {
	contract, err := bindEthdkg(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Ethdkg{EthdkgCaller: EthdkgCaller{contract: contract}, EthdkgTransactor: EthdkgTransactor{contract: contract}, EthdkgFilterer: EthdkgFilterer{contract: contract}}, nil
}

// NewEthdkgCaller creates a new read-only instance of Ethdkg, bound to a specific deployed contract.
func NewEthdkgCaller(address common.Address, caller bind.ContractCaller) (*EthdkgCaller, error) {
	contract, err := bindEthdkg(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &EthdkgCaller{contract: contract}, nil
}

// NewEthdkgTransactor creates a new write-only instance of Ethdkg, bound to a specific deployed contract.
func NewEthdkgTransactor(address common.Address, transactor bind.ContractTransactor) (*EthdkgTransactor, error) {
	contract, err := bindEthdkg(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &EthdkgTransactor{contract: contract}, nil
}

// NewEthdkgFilterer creates a new log filterer instance of Ethdkg, bound to a specific deployed contract.
func NewEthdkgFilterer(address common.Address, filterer bind.ContractFilterer) (*EthdkgFilterer, error) {
	contract, err := bindEthdkg(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &EthdkgFilterer{contract: contract}, nil
}

// bindEthdkg binds a generic wrapper to an already deployed contract.
func bindEthdkg(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(EthdkgABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Ethdkg *EthdkgRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Ethdkg.Contract.EthdkgCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Ethdkg *EthdkgRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Ethdkg.Contract.EthdkgTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Ethdkg *EthdkgRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Ethdkg.Contract.EthdkgTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Ethdkg *EthdkgCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Ethdkg.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Ethdkg *EthdkgTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Ethdkg.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Ethdkg *EthdkgTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Ethdkg.Contract.contract.Transact(opts, method, params...)
}

// AggregateSignatures is a free data retrieval call binding the contract method 0xf022e061.
//
// Solidity: function AggregateSignatures(uint256[2][] sigs, uint256[] indices, uint256 threshold, uint256[] invArray) view returns(uint256[2])
func (_Ethdkg *EthdkgCaller) AggregateSignatures(opts *bind.CallOpts, sigs [][2]*big.Int, indices []*big.Int, threshold *big.Int, invArray []*big.Int) ([2]*big.Int, error) {
	var (
		ret0 = new([2]*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "AggregateSignatures", sigs, indices, threshold, invArray)
	return *ret0, err
}

// AggregateSignatures is a free data retrieval call binding the contract method 0xf022e061.
//
// Solidity: function AggregateSignatures(uint256[2][] sigs, uint256[] indices, uint256 threshold, uint256[] invArray) view returns(uint256[2])
func (_Ethdkg *EthdkgSession) AggregateSignatures(sigs [][2]*big.Int, indices []*big.Int, threshold *big.Int, invArray []*big.Int) ([2]*big.Int, error) {
	return _Ethdkg.Contract.AggregateSignatures(&_Ethdkg.CallOpts, sigs, indices, threshold, invArray)
}

// AggregateSignatures is a free data retrieval call binding the contract method 0xf022e061.
//
// Solidity: function AggregateSignatures(uint256[2][] sigs, uint256[] indices, uint256 threshold, uint256[] invArray) view returns(uint256[2])
func (_Ethdkg *EthdkgCallerSession) AggregateSignatures(sigs [][2]*big.Int, indices []*big.Int, threshold *big.Int, invArray []*big.Int) ([2]*big.Int, error) {
	return _Ethdkg.Contract.AggregateSignatures(&_Ethdkg.CallOpts, sigs, indices, threshold, invArray)
}

// DELTACONFIRM is a free data retrieval call binding the contract method 0x7543b80f.
//
// Solidity: function DELTA_CONFIRM() view returns(uint256)
func (_Ethdkg *EthdkgCaller) DELTACONFIRM(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "DELTA_CONFIRM")
	return *ret0, err
}

// DELTACONFIRM is a free data retrieval call binding the contract method 0x7543b80f.
//
// Solidity: function DELTA_CONFIRM() view returns(uint256)
func (_Ethdkg *EthdkgSession) DELTACONFIRM() (*big.Int, error) {
	return _Ethdkg.Contract.DELTACONFIRM(&_Ethdkg.CallOpts)
}

// DELTACONFIRM is a free data retrieval call binding the contract method 0x7543b80f.
//
// Solidity: function DELTA_CONFIRM() view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) DELTACONFIRM() (*big.Int, error) {
	return _Ethdkg.Contract.DELTACONFIRM(&_Ethdkg.CallOpts)
}

// DELTAINCLUDE is a free data retrieval call binding the contract method 0x0f21e5d8.
//
// Solidity: function DELTA_INCLUDE() view returns(uint256)
func (_Ethdkg *EthdkgCaller) DELTAINCLUDE(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "DELTA_INCLUDE")
	return *ret0, err
}

// DELTAINCLUDE is a free data retrieval call binding the contract method 0x0f21e5d8.
//
// Solidity: function DELTA_INCLUDE() view returns(uint256)
func (_Ethdkg *EthdkgSession) DELTAINCLUDE() (*big.Int, error) {
	return _Ethdkg.Contract.DELTAINCLUDE(&_Ethdkg.CallOpts)
}

// DELTAINCLUDE is a free data retrieval call binding the contract method 0x0f21e5d8.
//
// Solidity: function DELTA_INCLUDE() view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) DELTAINCLUDE() (*big.Int, error) {
	return _Ethdkg.Contract.DELTAINCLUDE(&_Ethdkg.CallOpts)
}

// HashToG1 is a free data retrieval call binding the contract method 0x95add79c.
//
// Solidity: function HashToG1(bytes message) view returns(uint256[2] h)
func (_Ethdkg *EthdkgCaller) HashToG1(opts *bind.CallOpts, message []byte) ([2]*big.Int, error) {
	var (
		ret0 = new([2]*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "HashToG1", message)
	return *ret0, err
}

// HashToG1 is a free data retrieval call binding the contract method 0x95add79c.
//
// Solidity: function HashToG1(bytes message) view returns(uint256[2] h)
func (_Ethdkg *EthdkgSession) HashToG1(message []byte) ([2]*big.Int, error) {
	return _Ethdkg.Contract.HashToG1(&_Ethdkg.CallOpts, message)
}

// HashToG1 is a free data retrieval call binding the contract method 0x95add79c.
//
// Solidity: function HashToG1(bytes message) view returns(uint256[2] h)
func (_Ethdkg *EthdkgCallerSession) HashToG1(message []byte) ([2]*big.Int, error) {
	return _Ethdkg.Contract.HashToG1(&_Ethdkg.CallOpts, message)
}

// Sign is a free data retrieval call binding the contract method 0x6bdf477c.
//
// Solidity: function Sign(bytes message, uint256 privK) view returns(uint256[2] sig)
func (_Ethdkg *EthdkgCaller) Sign(opts *bind.CallOpts, message []byte, privK *big.Int) ([2]*big.Int, error) {
	var (
		ret0 = new([2]*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "Sign", message, privK)
	return *ret0, err
}

// Sign is a free data retrieval call binding the contract method 0x6bdf477c.
//
// Solidity: function Sign(bytes message, uint256 privK) view returns(uint256[2] sig)
func (_Ethdkg *EthdkgSession) Sign(message []byte, privK *big.Int) ([2]*big.Int, error) {
	return _Ethdkg.Contract.Sign(&_Ethdkg.CallOpts, message, privK)
}

// Sign is a free data retrieval call binding the contract method 0x6bdf477c.
//
// Solidity: function Sign(bytes message, uint256 privK) view returns(uint256[2] sig)
func (_Ethdkg *EthdkgCallerSession) Sign(message []byte, privK *big.Int) ([2]*big.Int, error) {
	return _Ethdkg.Contract.Sign(&_Ethdkg.CallOpts, message, privK)
}

// TDISPUTEEND is a free data retrieval call binding the contract method 0xd3cf6186.
//
// Solidity: function T_DISPUTE_END() view returns(uint256)
func (_Ethdkg *EthdkgCaller) TDISPUTEEND(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "T_DISPUTE_END")
	return *ret0, err
}

// TDISPUTEEND is a free data retrieval call binding the contract method 0xd3cf6186.
//
// Solidity: function T_DISPUTE_END() view returns(uint256)
func (_Ethdkg *EthdkgSession) TDISPUTEEND() (*big.Int, error) {
	return _Ethdkg.Contract.TDISPUTEEND(&_Ethdkg.CallOpts)
}

// TDISPUTEEND is a free data retrieval call binding the contract method 0xd3cf6186.
//
// Solidity: function T_DISPUTE_END() view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) TDISPUTEEND() (*big.Int, error) {
	return _Ethdkg.Contract.TDISPUTEEND(&_Ethdkg.CallOpts)
}

// TGPKJDISPUTEEND is a free data retrieval call binding the contract method 0xab63c722.
//
// Solidity: function T_GPKJ_DISPUTE_END() view returns(uint256)
func (_Ethdkg *EthdkgCaller) TGPKJDISPUTEEND(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "T_GPKJ_DISPUTE_END")
	return *ret0, err
}

// TGPKJDISPUTEEND is a free data retrieval call binding the contract method 0xab63c722.
//
// Solidity: function T_GPKJ_DISPUTE_END() view returns(uint256)
func (_Ethdkg *EthdkgSession) TGPKJDISPUTEEND() (*big.Int, error) {
	return _Ethdkg.Contract.TGPKJDISPUTEEND(&_Ethdkg.CallOpts)
}

// TGPKJDISPUTEEND is a free data retrieval call binding the contract method 0xab63c722.
//
// Solidity: function T_GPKJ_DISPUTE_END() view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) TGPKJDISPUTEEND() (*big.Int, error) {
	return _Ethdkg.Contract.TGPKJDISPUTEEND(&_Ethdkg.CallOpts)
}

// TGPKJSUBMISSIONEND is a free data retrieval call binding the contract method 0x9c2aa838.
//
// Solidity: function T_GPKJ_SUBMISSION_END() view returns(uint256)
func (_Ethdkg *EthdkgCaller) TGPKJSUBMISSIONEND(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "T_GPKJ_SUBMISSION_END")
	return *ret0, err
}

// TGPKJSUBMISSIONEND is a free data retrieval call binding the contract method 0x9c2aa838.
//
// Solidity: function T_GPKJ_SUBMISSION_END() view returns(uint256)
func (_Ethdkg *EthdkgSession) TGPKJSUBMISSIONEND() (*big.Int, error) {
	return _Ethdkg.Contract.TGPKJSUBMISSIONEND(&_Ethdkg.CallOpts)
}

// TGPKJSUBMISSIONEND is a free data retrieval call binding the contract method 0x9c2aa838.
//
// Solidity: function T_GPKJ_SUBMISSION_END() view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) TGPKJSUBMISSIONEND() (*big.Int, error) {
	return _Ethdkg.Contract.TGPKJSUBMISSIONEND(&_Ethdkg.CallOpts)
}

// TKEYSHARESUBMISSIONEND is a free data retrieval call binding the contract method 0xe2291ec3.
//
// Solidity: function T_KEY_SHARE_SUBMISSION_END() view returns(uint256)
func (_Ethdkg *EthdkgCaller) TKEYSHARESUBMISSIONEND(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "T_KEY_SHARE_SUBMISSION_END")
	return *ret0, err
}

// TKEYSHARESUBMISSIONEND is a free data retrieval call binding the contract method 0xe2291ec3.
//
// Solidity: function T_KEY_SHARE_SUBMISSION_END() view returns(uint256)
func (_Ethdkg *EthdkgSession) TKEYSHARESUBMISSIONEND() (*big.Int, error) {
	return _Ethdkg.Contract.TKEYSHARESUBMISSIONEND(&_Ethdkg.CallOpts)
}

// TKEYSHARESUBMISSIONEND is a free data retrieval call binding the contract method 0xe2291ec3.
//
// Solidity: function T_KEY_SHARE_SUBMISSION_END() view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) TKEYSHARESUBMISSIONEND() (*big.Int, error) {
	return _Ethdkg.Contract.TKEYSHARESUBMISSIONEND(&_Ethdkg.CallOpts)
}

// TMPKSUBMISSIONEND is a free data retrieval call binding the contract method 0x07f02c54.
//
// Solidity: function T_MPK_SUBMISSION_END() view returns(uint256)
func (_Ethdkg *EthdkgCaller) TMPKSUBMISSIONEND(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "T_MPK_SUBMISSION_END")
	return *ret0, err
}

// TMPKSUBMISSIONEND is a free data retrieval call binding the contract method 0x07f02c54.
//
// Solidity: function T_MPK_SUBMISSION_END() view returns(uint256)
func (_Ethdkg *EthdkgSession) TMPKSUBMISSIONEND() (*big.Int, error) {
	return _Ethdkg.Contract.TMPKSUBMISSIONEND(&_Ethdkg.CallOpts)
}

// TMPKSUBMISSIONEND is a free data retrieval call binding the contract method 0x07f02c54.
//
// Solidity: function T_MPK_SUBMISSION_END() view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) TMPKSUBMISSIONEND() (*big.Int, error) {
	return _Ethdkg.Contract.TMPKSUBMISSIONEND(&_Ethdkg.CallOpts)
}

// TREGISTRATIONEND is a free data retrieval call binding the contract method 0x0de1553f.
//
// Solidity: function T_REGISTRATION_END() view returns(uint256)
func (_Ethdkg *EthdkgCaller) TREGISTRATIONEND(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "T_REGISTRATION_END")
	return *ret0, err
}

// TREGISTRATIONEND is a free data retrieval call binding the contract method 0x0de1553f.
//
// Solidity: function T_REGISTRATION_END() view returns(uint256)
func (_Ethdkg *EthdkgSession) TREGISTRATIONEND() (*big.Int, error) {
	return _Ethdkg.Contract.TREGISTRATIONEND(&_Ethdkg.CallOpts)
}

// TREGISTRATIONEND is a free data retrieval call binding the contract method 0x0de1553f.
//
// Solidity: function T_REGISTRATION_END() view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) TREGISTRATIONEND() (*big.Int, error) {
	return _Ethdkg.Contract.TREGISTRATIONEND(&_Ethdkg.CallOpts)
}

// TSHAREDISTRIBUTIONEND is a free data retrieval call binding the contract method 0xdc614e28.
//
// Solidity: function T_SHARE_DISTRIBUTION_END() view returns(uint256)
func (_Ethdkg *EthdkgCaller) TSHAREDISTRIBUTIONEND(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "T_SHARE_DISTRIBUTION_END")
	return *ret0, err
}

// TSHAREDISTRIBUTIONEND is a free data retrieval call binding the contract method 0xdc614e28.
//
// Solidity: function T_SHARE_DISTRIBUTION_END() view returns(uint256)
func (_Ethdkg *EthdkgSession) TSHAREDISTRIBUTIONEND() (*big.Int, error) {
	return _Ethdkg.Contract.TSHAREDISTRIBUTIONEND(&_Ethdkg.CallOpts)
}

// TSHAREDISTRIBUTIONEND is a free data retrieval call binding the contract method 0xdc614e28.
//
// Solidity: function T_SHARE_DISTRIBUTION_END() view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) TSHAREDISTRIBUTIONEND() (*big.Int, error) {
	return _Ethdkg.Contract.TSHAREDISTRIBUTIONEND(&_Ethdkg.CallOpts)
}

// Verify is a free data retrieval call binding the contract method 0x06367587.
//
// Solidity: function Verify(bytes message, uint256[2] sig, uint256[4] pubK) view returns(bool v)
func (_Ethdkg *EthdkgCaller) Verify(opts *bind.CallOpts, message []byte, sig [2]*big.Int, pubK [4]*big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "Verify", message, sig, pubK)
	return *ret0, err
}

// Verify is a free data retrieval call binding the contract method 0x06367587.
//
// Solidity: function Verify(bytes message, uint256[2] sig, uint256[4] pubK) view returns(bool v)
func (_Ethdkg *EthdkgSession) Verify(message []byte, sig [2]*big.Int, pubK [4]*big.Int) (bool, error) {
	return _Ethdkg.Contract.Verify(&_Ethdkg.CallOpts, message, sig, pubK)
}

// Verify is a free data retrieval call binding the contract method 0x06367587.
//
// Solidity: function Verify(bytes message, uint256[2] sig, uint256[4] pubK) view returns(bool v)
func (_Ethdkg *EthdkgCallerSession) Verify(message []byte, sig [2]*big.Int, pubK [4]*big.Int) (bool, error) {
	return _Ethdkg.Contract.Verify(&_Ethdkg.CallOpts, message, sig, pubK)
}

// Addresses is a free data retrieval call binding the contract method 0xedf26d9b.
//
// Solidity: function addresses(uint256 ) view returns(address)
func (_Ethdkg *EthdkgCaller) Addresses(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "addresses", arg0)
	return *ret0, err
}

// Addresses is a free data retrieval call binding the contract method 0xedf26d9b.
//
// Solidity: function addresses(uint256 ) view returns(address)
func (_Ethdkg *EthdkgSession) Addresses(arg0 *big.Int) (common.Address, error) {
	return _Ethdkg.Contract.Addresses(&_Ethdkg.CallOpts, arg0)
}

// Addresses is a free data retrieval call binding the contract method 0xedf26d9b.
//
// Solidity: function addresses(uint256 ) view returns(address)
func (_Ethdkg *EthdkgCallerSession) Addresses(arg0 *big.Int) (common.Address, error) {
	return _Ethdkg.Contract.Addresses(&_Ethdkg.CallOpts, arg0)
}

// CheckIndices is a free data retrieval call binding the contract method 0x80f4a922.
//
// Solidity: function checkIndices(uint256[] honestIndices, uint256[] dishonestIndices, uint256 n) pure returns(bool validIndices)
func (_Ethdkg *EthdkgCaller) CheckIndices(opts *bind.CallOpts, honestIndices []*big.Int, dishonestIndices []*big.Int, n *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "checkIndices", honestIndices, dishonestIndices, n)
	return *ret0, err
}

// CheckIndices is a free data retrieval call binding the contract method 0x80f4a922.
//
// Solidity: function checkIndices(uint256[] honestIndices, uint256[] dishonestIndices, uint256 n) pure returns(bool validIndices)
func (_Ethdkg *EthdkgSession) CheckIndices(honestIndices []*big.Int, dishonestIndices []*big.Int, n *big.Int) (bool, error) {
	return _Ethdkg.Contract.CheckIndices(&_Ethdkg.CallOpts, honestIndices, dishonestIndices, n)
}

// CheckIndices is a free data retrieval call binding the contract method 0x80f4a922.
//
// Solidity: function checkIndices(uint256[] honestIndices, uint256[] dishonestIndices, uint256 n) pure returns(bool validIndices)
func (_Ethdkg *EthdkgCallerSession) CheckIndices(honestIndices []*big.Int, dishonestIndices []*big.Int, n *big.Int) (bool, error) {
	return _Ethdkg.Contract.CheckIndices(&_Ethdkg.CallOpts, honestIndices, dishonestIndices, n)
}

// CheckInverses is a free data retrieval call binding the contract method 0xe480a92e.
//
// Solidity: function checkInverses(uint256[] invArray, uint256 maxIndex) pure returns(bool)
func (_Ethdkg *EthdkgCaller) CheckInverses(opts *bind.CallOpts, invArray []*big.Int, maxIndex *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "checkInverses", invArray, maxIndex)
	return *ret0, err
}

// CheckInverses is a free data retrieval call binding the contract method 0xe480a92e.
//
// Solidity: function checkInverses(uint256[] invArray, uint256 maxIndex) pure returns(bool)
func (_Ethdkg *EthdkgSession) CheckInverses(invArray []*big.Int, maxIndex *big.Int) (bool, error) {
	return _Ethdkg.Contract.CheckInverses(&_Ethdkg.CallOpts, invArray, maxIndex)
}

// CheckInverses is a free data retrieval call binding the contract method 0xe480a92e.
//
// Solidity: function checkInverses(uint256[] invArray, uint256 maxIndex) pure returns(bool)
func (_Ethdkg *EthdkgCallerSession) CheckInverses(invArray []*big.Int, maxIndex *big.Int) (bool, error) {
	return _Ethdkg.Contract.CheckInverses(&_Ethdkg.CallOpts, invArray, maxIndex)
}

// Commitments1stCoefficient is a free data retrieval call binding the contract method 0x2cf4050b.
//
// Solidity: function commitments_1st_coefficient(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgCaller) Commitments1stCoefficient(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "commitments_1st_coefficient", arg0, arg1)
	return *ret0, err
}

// Commitments1stCoefficient is a free data retrieval call binding the contract method 0x2cf4050b.
//
// Solidity: function commitments_1st_coefficient(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgSession) Commitments1stCoefficient(arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	return _Ethdkg.Contract.Commitments1stCoefficient(&_Ethdkg.CallOpts, arg0, arg1)
}

// Commitments1stCoefficient is a free data retrieval call binding the contract method 0x2cf4050b.
//
// Solidity: function commitments_1st_coefficient(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) Commitments1stCoefficient(arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	return _Ethdkg.Contract.Commitments1stCoefficient(&_Ethdkg.CallOpts, arg0, arg1)
}

// GpkjDisputeCheck is a free data retrieval call binding the contract method 0xd1be7cc5.
//
// Solidity: function gpkj_dispute_check() view returns(bool)
func (_Ethdkg *EthdkgCaller) GpkjDisputeCheck(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "gpkj_dispute_check")
	return *ret0, err
}

// GpkjDisputeCheck is a free data retrieval call binding the contract method 0xd1be7cc5.
//
// Solidity: function gpkj_dispute_check() view returns(bool)
func (_Ethdkg *EthdkgSession) GpkjDisputeCheck() (bool, error) {
	return _Ethdkg.Contract.GpkjDisputeCheck(&_Ethdkg.CallOpts)
}

// GpkjDisputeCheck is a free data retrieval call binding the contract method 0xd1be7cc5.
//
// Solidity: function gpkj_dispute_check() view returns(bool)
func (_Ethdkg *EthdkgCallerSession) GpkjDisputeCheck() (bool, error) {
	return _Ethdkg.Contract.GpkjDisputeCheck(&_Ethdkg.CallOpts)
}

// GpkjSubmissionCheck is a free data retrieval call binding the contract method 0x59f3effc.
//
// Solidity: function gpkj_submission_check() view returns(bool)
func (_Ethdkg *EthdkgCaller) GpkjSubmissionCheck(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "gpkj_submission_check")
	return *ret0, err
}

// GpkjSubmissionCheck is a free data retrieval call binding the contract method 0x59f3effc.
//
// Solidity: function gpkj_submission_check() view returns(bool)
func (_Ethdkg *EthdkgSession) GpkjSubmissionCheck() (bool, error) {
	return _Ethdkg.Contract.GpkjSubmissionCheck(&_Ethdkg.CallOpts)
}

// GpkjSubmissionCheck is a free data retrieval call binding the contract method 0x59f3effc.
//
// Solidity: function gpkj_submission_check() view returns(bool)
func (_Ethdkg *EthdkgCallerSession) GpkjSubmissionCheck() (bool, error) {
	return _Ethdkg.Contract.GpkjSubmissionCheck(&_Ethdkg.CallOpts)
}

// GpkjSubmissions is a free data retrieval call binding the contract method 0xfef001a9.
//
// Solidity: function gpkj_submissions(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgCaller) GpkjSubmissions(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "gpkj_submissions", arg0, arg1)
	return *ret0, err
}

// GpkjSubmissions is a free data retrieval call binding the contract method 0xfef001a9.
//
// Solidity: function gpkj_submissions(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgSession) GpkjSubmissions(arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	return _Ethdkg.Contract.GpkjSubmissions(&_Ethdkg.CallOpts, arg0, arg1)
}

// GpkjSubmissions is a free data retrieval call binding the contract method 0xfef001a9.
//
// Solidity: function gpkj_submissions(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) GpkjSubmissions(arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	return _Ethdkg.Contract.GpkjSubmissions(&_Ethdkg.CallOpts, arg0, arg1)
}

// InitialMessage is a free data retrieval call binding the contract method 0xaa7bd338.
//
// Solidity: function initial_message() view returns(bytes)
func (_Ethdkg *EthdkgCaller) InitialMessage(opts *bind.CallOpts) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "initial_message")
	return *ret0, err
}

// InitialMessage is a free data retrieval call binding the contract method 0xaa7bd338.
//
// Solidity: function initial_message() view returns(bytes)
func (_Ethdkg *EthdkgSession) InitialMessage() ([]byte, error) {
	return _Ethdkg.Contract.InitialMessage(&_Ethdkg.CallOpts)
}

// InitialMessage is a free data retrieval call binding the contract method 0xaa7bd338.
//
// Solidity: function initial_message() view returns(bytes)
func (_Ethdkg *EthdkgCallerSession) InitialMessage() ([]byte, error) {
	return _Ethdkg.Contract.InitialMessage(&_Ethdkg.CallOpts)
}

// InitialSignatures is a free data retrieval call binding the contract method 0x7328f826.
//
// Solidity: function initial_signatures(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgCaller) InitialSignatures(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "initial_signatures", arg0, arg1)
	return *ret0, err
}

// InitialSignatures is a free data retrieval call binding the contract method 0x7328f826.
//
// Solidity: function initial_signatures(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgSession) InitialSignatures(arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	return _Ethdkg.Contract.InitialSignatures(&_Ethdkg.CallOpts, arg0, arg1)
}

// InitialSignatures is a free data retrieval call binding the contract method 0x7328f826.
//
// Solidity: function initial_signatures(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) InitialSignatures(arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	return _Ethdkg.Contract.InitialSignatures(&_Ethdkg.CallOpts, arg0, arg1)
}

// IsMalicious is a free data retrieval call binding the contract method 0xeadfcadc.
//
// Solidity: function is_malicious(address ) view returns(bool)
func (_Ethdkg *EthdkgCaller) IsMalicious(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "is_malicious", arg0)
	return *ret0, err
}

// IsMalicious is a free data retrieval call binding the contract method 0xeadfcadc.
//
// Solidity: function is_malicious(address ) view returns(bool)
func (_Ethdkg *EthdkgSession) IsMalicious(arg0 common.Address) (bool, error) {
	return _Ethdkg.Contract.IsMalicious(&_Ethdkg.CallOpts, arg0)
}

// IsMalicious is a free data retrieval call binding the contract method 0xeadfcadc.
//
// Solidity: function is_malicious(address ) view returns(bool)
func (_Ethdkg *EthdkgCallerSession) IsMalicious(arg0 common.Address) (bool, error) {
	return _Ethdkg.Contract.IsMalicious(&_Ethdkg.CallOpts, arg0)
}

// KeyShareSubmissionCheck is a free data retrieval call binding the contract method 0x836889dc.
//
// Solidity: function key_share_submission_check() view returns(bool)
func (_Ethdkg *EthdkgCaller) KeyShareSubmissionCheck(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "key_share_submission_check")
	return *ret0, err
}

// KeyShareSubmissionCheck is a free data retrieval call binding the contract method 0x836889dc.
//
// Solidity: function key_share_submission_check() view returns(bool)
func (_Ethdkg *EthdkgSession) KeyShareSubmissionCheck() (bool, error) {
	return _Ethdkg.Contract.KeyShareSubmissionCheck(&_Ethdkg.CallOpts)
}

// KeyShareSubmissionCheck is a free data retrieval call binding the contract method 0x836889dc.
//
// Solidity: function key_share_submission_check() view returns(bool)
func (_Ethdkg *EthdkgCallerSession) KeyShareSubmissionCheck() (bool, error) {
	return _Ethdkg.Contract.KeyShareSubmissionCheck(&_Ethdkg.CallOpts)
}

// KeyShares is a free data retrieval call binding the contract method 0xa88c9e1c.
//
// Solidity: function key_shares(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgCaller) KeyShares(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "key_shares", arg0, arg1)
	return *ret0, err
}

// KeyShares is a free data retrieval call binding the contract method 0xa88c9e1c.
//
// Solidity: function key_shares(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgSession) KeyShares(arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	return _Ethdkg.Contract.KeyShares(&_Ethdkg.CallOpts, arg0, arg1)
}

// KeyShares is a free data retrieval call binding the contract method 0xa88c9e1c.
//
// Solidity: function key_shares(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) KeyShares(arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	return _Ethdkg.Contract.KeyShares(&_Ethdkg.CallOpts, arg0, arg1)
}

// MasterPublicKey is a free data retrieval call binding the contract method 0xe6511378.
//
// Solidity: function master_public_key(uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgCaller) MasterPublicKey(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "master_public_key", arg0)
	return *ret0, err
}

// MasterPublicKey is a free data retrieval call binding the contract method 0xe6511378.
//
// Solidity: function master_public_key(uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgSession) MasterPublicKey(arg0 *big.Int) (*big.Int, error) {
	return _Ethdkg.Contract.MasterPublicKey(&_Ethdkg.CallOpts, arg0)
}

// MasterPublicKey is a free data retrieval call binding the contract method 0xe6511378.
//
// Solidity: function master_public_key(uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) MasterPublicKey(arg0 *big.Int) (*big.Int, error) {
	return _Ethdkg.Contract.MasterPublicKey(&_Ethdkg.CallOpts, arg0)
}

// MpkSubmissionCheck is a free data retrieval call binding the contract method 0x050a54f0.
//
// Solidity: function mpk_submission_check() view returns(bool)
func (_Ethdkg *EthdkgCaller) MpkSubmissionCheck(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "mpk_submission_check")
	return *ret0, err
}

// MpkSubmissionCheck is a free data retrieval call binding the contract method 0x050a54f0.
//
// Solidity: function mpk_submission_check() view returns(bool)
func (_Ethdkg *EthdkgSession) MpkSubmissionCheck() (bool, error) {
	return _Ethdkg.Contract.MpkSubmissionCheck(&_Ethdkg.CallOpts)
}

// MpkSubmissionCheck is a free data retrieval call binding the contract method 0x050a54f0.
//
// Solidity: function mpk_submission_check() view returns(bool)
func (_Ethdkg *EthdkgCallerSession) MpkSubmissionCheck() (bool, error) {
	return _Ethdkg.Contract.MpkSubmissionCheck(&_Ethdkg.CallOpts)
}

// NumNodes is a free data retrieval call binding the contract method 0x02cd0423.
//
// Solidity: function num_nodes() view returns(uint256)
func (_Ethdkg *EthdkgCaller) NumNodes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "num_nodes")
	return *ret0, err
}

// NumNodes is a free data retrieval call binding the contract method 0x02cd0423.
//
// Solidity: function num_nodes() view returns(uint256)
func (_Ethdkg *EthdkgSession) NumNodes() (*big.Int, error) {
	return _Ethdkg.Contract.NumNodes(&_Ethdkg.CallOpts)
}

// NumNodes is a free data retrieval call binding the contract method 0x02cd0423.
//
// Solidity: function num_nodes() view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) NumNodes() (*big.Int, error) {
	return _Ethdkg.Contract.NumNodes(&_Ethdkg.CallOpts)
}

// PublicKeys is a free data retrieval call binding the contract method 0x92896b2d.
//
// Solidity: function public_keys(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgCaller) PublicKeys(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "public_keys", arg0, arg1)
	return *ret0, err
}

// PublicKeys is a free data retrieval call binding the contract method 0x92896b2d.
//
// Solidity: function public_keys(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgSession) PublicKeys(arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	return _Ethdkg.Contract.PublicKeys(&_Ethdkg.CallOpts, arg0, arg1)
}

// PublicKeys is a free data retrieval call binding the contract method 0x92896b2d.
//
// Solidity: function public_keys(address , uint256 ) view returns(uint256)
func (_Ethdkg *EthdkgCallerSession) PublicKeys(arg0 common.Address, arg1 *big.Int) (*big.Int, error) {
	return _Ethdkg.Contract.PublicKeys(&_Ethdkg.CallOpts, arg0, arg1)
}

// SafeSigningPoint is a free data retrieval call binding the contract method 0x96d95a6f.
//
// Solidity: function safeSigningPoint(uint256[2] input) pure returns(bool)
func (_Ethdkg *EthdkgCaller) SafeSigningPoint(opts *bind.CallOpts, input [2]*big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "safeSigningPoint", input)
	return *ret0, err
}

// SafeSigningPoint is a free data retrieval call binding the contract method 0x96d95a6f.
//
// Solidity: function safeSigningPoint(uint256[2] input) pure returns(bool)
func (_Ethdkg *EthdkgSession) SafeSigningPoint(input [2]*big.Int) (bool, error) {
	return _Ethdkg.Contract.SafeSigningPoint(&_Ethdkg.CallOpts, input)
}

// SafeSigningPoint is a free data retrieval call binding the contract method 0x96d95a6f.
//
// Solidity: function safeSigningPoint(uint256[2] input) pure returns(bool)
func (_Ethdkg *EthdkgCallerSession) SafeSigningPoint(input [2]*big.Int) (bool, error) {
	return _Ethdkg.Contract.SafeSigningPoint(&_Ethdkg.CallOpts, input)
}

// ShareDisputeCheck is a free data retrieval call binding the contract method 0xb6e8c6e6.
//
// Solidity: function share_dispute_check() view returns(bool)
func (_Ethdkg *EthdkgCaller) ShareDisputeCheck(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "share_dispute_check")
	return *ret0, err
}

// ShareDisputeCheck is a free data retrieval call binding the contract method 0xb6e8c6e6.
//
// Solidity: function share_dispute_check() view returns(bool)
func (_Ethdkg *EthdkgSession) ShareDisputeCheck() (bool, error) {
	return _Ethdkg.Contract.ShareDisputeCheck(&_Ethdkg.CallOpts)
}

// ShareDisputeCheck is a free data retrieval call binding the contract method 0xb6e8c6e6.
//
// Solidity: function share_dispute_check() view returns(bool)
func (_Ethdkg *EthdkgCallerSession) ShareDisputeCheck() (bool, error) {
	return _Ethdkg.Contract.ShareDisputeCheck(&_Ethdkg.CallOpts)
}

// ShareDistributionCheck is a free data retrieval call binding the contract method 0x2f11b985.
//
// Solidity: function share_distribution_check() view returns(bool)
func (_Ethdkg *EthdkgCaller) ShareDistributionCheck(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "share_distribution_check")
	return *ret0, err
}

// ShareDistributionCheck is a free data retrieval call binding the contract method 0x2f11b985.
//
// Solidity: function share_distribution_check() view returns(bool)
func (_Ethdkg *EthdkgSession) ShareDistributionCheck() (bool, error) {
	return _Ethdkg.Contract.ShareDistributionCheck(&_Ethdkg.CallOpts)
}

// ShareDistributionCheck is a free data retrieval call binding the contract method 0x2f11b985.
//
// Solidity: function share_distribution_check() view returns(bool)
func (_Ethdkg *EthdkgCallerSession) ShareDistributionCheck() (bool, error) {
	return _Ethdkg.Contract.ShareDistributionCheck(&_Ethdkg.CallOpts)
}

// ShareDistributionHashes is a free data retrieval call binding the contract method 0xc21bee83.
//
// Solidity: function share_distribution_hashes(address ) view returns(bytes32)
func (_Ethdkg *EthdkgCaller) ShareDistributionHashes(opts *bind.CallOpts, arg0 common.Address) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Ethdkg.contract.Call(opts, out, "share_distribution_hashes", arg0)
	return *ret0, err
}

// ShareDistributionHashes is a free data retrieval call binding the contract method 0xc21bee83.
//
// Solidity: function share_distribution_hashes(address ) view returns(bytes32)
func (_Ethdkg *EthdkgSession) ShareDistributionHashes(arg0 common.Address) ([32]byte, error) {
	return _Ethdkg.Contract.ShareDistributionHashes(&_Ethdkg.CallOpts, arg0)
}

// ShareDistributionHashes is a free data retrieval call binding the contract method 0xc21bee83.
//
// Solidity: function share_distribution_hashes(address ) view returns(bytes32)
func (_Ethdkg *EthdkgCallerSession) ShareDistributionHashes(arg0 common.Address) ([32]byte, error) {
	return _Ethdkg.Contract.ShareDistributionHashes(&_Ethdkg.CallOpts, arg0)
}

// GroupAccusationGPKj is a paid mutator transaction binding the contract method 0xa6872833.
//
// Solidity: function Group_Accusation_GPKj(uint256[] invArray, uint256[] honestIndices, uint256[] dishonestIndices) returns()
func (_Ethdkg *EthdkgTransactor) GroupAccusationGPKj(opts *bind.TransactOpts, invArray []*big.Int, honestIndices []*big.Int, dishonestIndices []*big.Int) (*types.Transaction, error) {
	return _Ethdkg.contract.Transact(opts, "Group_Accusation_GPKj", invArray, honestIndices, dishonestIndices)
}

// GroupAccusationGPKj is a paid mutator transaction binding the contract method 0xa6872833.
//
// Solidity: function Group_Accusation_GPKj(uint256[] invArray, uint256[] honestIndices, uint256[] dishonestIndices) returns()
func (_Ethdkg *EthdkgSession) GroupAccusationGPKj(invArray []*big.Int, honestIndices []*big.Int, dishonestIndices []*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.GroupAccusationGPKj(&_Ethdkg.TransactOpts, invArray, honestIndices, dishonestIndices)
}

// GroupAccusationGPKj is a paid mutator transaction binding the contract method 0xa6872833.
//
// Solidity: function Group_Accusation_GPKj(uint256[] invArray, uint256[] honestIndices, uint256[] dishonestIndices) returns()
func (_Ethdkg *EthdkgTransactorSession) GroupAccusationGPKj(invArray []*big.Int, honestIndices []*big.Int, dishonestIndices []*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.GroupAccusationGPKj(&_Ethdkg.TransactOpts, invArray, honestIndices, dishonestIndices)
}

// SubmitGPKj is a paid mutator transaction binding the contract method 0xdc5e8a0a.
//
// Solidity: function Submit_GPKj(uint256[4] gpkj, uint256[2] sig) returns()
func (_Ethdkg *EthdkgTransactor) SubmitGPKj(opts *bind.TransactOpts, gpkj [4]*big.Int, sig [2]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.contract.Transact(opts, "Submit_GPKj", gpkj, sig)
}

// SubmitGPKj is a paid mutator transaction binding the contract method 0xdc5e8a0a.
//
// Solidity: function Submit_GPKj(uint256[4] gpkj, uint256[2] sig) returns()
func (_Ethdkg *EthdkgSession) SubmitGPKj(gpkj [4]*big.Int, sig [2]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.SubmitGPKj(&_Ethdkg.TransactOpts, gpkj, sig)
}

// SubmitGPKj is a paid mutator transaction binding the contract method 0xdc5e8a0a.
//
// Solidity: function Submit_GPKj(uint256[4] gpkj, uint256[2] sig) returns()
func (_Ethdkg *EthdkgTransactorSession) SubmitGPKj(gpkj [4]*big.Int, sig [2]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.SubmitGPKj(&_Ethdkg.TransactOpts, gpkj, sig)
}

// DistributeShares is a paid mutator transaction binding the contract method 0xa080e5e0.
//
// Solidity: function distribute_shares(uint256[] encrypted_shares, uint256[2][] commitments) returns()
func (_Ethdkg *EthdkgTransactor) DistributeShares(opts *bind.TransactOpts, encrypted_shares []*big.Int, commitments [][2]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.contract.Transact(opts, "distribute_shares", encrypted_shares, commitments)
}

// DistributeShares is a paid mutator transaction binding the contract method 0xa080e5e0.
//
// Solidity: function distribute_shares(uint256[] encrypted_shares, uint256[2][] commitments) returns()
func (_Ethdkg *EthdkgSession) DistributeShares(encrypted_shares []*big.Int, commitments [][2]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.DistributeShares(&_Ethdkg.TransactOpts, encrypted_shares, commitments)
}

// DistributeShares is a paid mutator transaction binding the contract method 0xa080e5e0.
//
// Solidity: function distribute_shares(uint256[] encrypted_shares, uint256[2][] commitments) returns()
func (_Ethdkg *EthdkgTransactorSession) DistributeShares(encrypted_shares []*big.Int, commitments [][2]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.DistributeShares(&_Ethdkg.TransactOpts, encrypted_shares, commitments)
}

// Register is a paid mutator transaction binding the contract method 0x3442af5c.
//
// Solidity: function register(uint256[2] public_key) returns()
func (_Ethdkg *EthdkgTransactor) Register(opts *bind.TransactOpts, public_key [2]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.contract.Transact(opts, "register", public_key)
}

// Register is a paid mutator transaction binding the contract method 0x3442af5c.
//
// Solidity: function register(uint256[2] public_key) returns()
func (_Ethdkg *EthdkgSession) Register(public_key [2]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.Register(&_Ethdkg.TransactOpts, public_key)
}

// Register is a paid mutator transaction binding the contract method 0x3442af5c.
//
// Solidity: function register(uint256[2] public_key) returns()
func (_Ethdkg *EthdkgTransactorSession) Register(public_key [2]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.Register(&_Ethdkg.TransactOpts, public_key)
}

// SubmitDispute is a paid mutator transaction binding the contract method 0x2f123ffc.
//
// Solidity: function submit_dispute(address issuer, uint256 issuer_list_idx, uint256 disputer_list_idx, uint256[] encrypted_shares, uint256[2][] commitments, uint256[2] shared_key, uint256[2] shared_key_correctness_proof) returns()
func (_Ethdkg *EthdkgTransactor) SubmitDispute(opts *bind.TransactOpts, issuer common.Address, issuer_list_idx *big.Int, disputer_list_idx *big.Int, encrypted_shares []*big.Int, commitments [][2]*big.Int, shared_key [2]*big.Int, shared_key_correctness_proof [2]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.contract.Transact(opts, "submit_dispute", issuer, issuer_list_idx, disputer_list_idx, encrypted_shares, commitments, shared_key, shared_key_correctness_proof)
}

// SubmitDispute is a paid mutator transaction binding the contract method 0x2f123ffc.
//
// Solidity: function submit_dispute(address issuer, uint256 issuer_list_idx, uint256 disputer_list_idx, uint256[] encrypted_shares, uint256[2][] commitments, uint256[2] shared_key, uint256[2] shared_key_correctness_proof) returns()
func (_Ethdkg *EthdkgSession) SubmitDispute(issuer common.Address, issuer_list_idx *big.Int, disputer_list_idx *big.Int, encrypted_shares []*big.Int, commitments [][2]*big.Int, shared_key [2]*big.Int, shared_key_correctness_proof [2]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.SubmitDispute(&_Ethdkg.TransactOpts, issuer, issuer_list_idx, disputer_list_idx, encrypted_shares, commitments, shared_key, shared_key_correctness_proof)
}

// SubmitDispute is a paid mutator transaction binding the contract method 0x2f123ffc.
//
// Solidity: function submit_dispute(address issuer, uint256 issuer_list_idx, uint256 disputer_list_idx, uint256[] encrypted_shares, uint256[2][] commitments, uint256[2] shared_key, uint256[2] shared_key_correctness_proof) returns()
func (_Ethdkg *EthdkgTransactorSession) SubmitDispute(issuer common.Address, issuer_list_idx *big.Int, disputer_list_idx *big.Int, encrypted_shares []*big.Int, commitments [][2]*big.Int, shared_key [2]*big.Int, shared_key_correctness_proof [2]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.SubmitDispute(&_Ethdkg.TransactOpts, issuer, issuer_list_idx, disputer_list_idx, encrypted_shares, commitments, shared_key, shared_key_correctness_proof)
}

// SubmitKeyShare is a paid mutator transaction binding the contract method 0x7163525e.
//
// Solidity: function submit_key_share(address issuer, uint256[2] key_share_G1, uint256[2] key_share_G1_correctness_proof, uint256[4] key_share_G2) returns()
func (_Ethdkg *EthdkgTransactor) SubmitKeyShare(opts *bind.TransactOpts, issuer common.Address, key_share_G1 [2]*big.Int, key_share_G1_correctness_proof [2]*big.Int, key_share_G2 [4]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.contract.Transact(opts, "submit_key_share", issuer, key_share_G1, key_share_G1_correctness_proof, key_share_G2)
}

// SubmitKeyShare is a paid mutator transaction binding the contract method 0x7163525e.
//
// Solidity: function submit_key_share(address issuer, uint256[2] key_share_G1, uint256[2] key_share_G1_correctness_proof, uint256[4] key_share_G2) returns()
func (_Ethdkg *EthdkgSession) SubmitKeyShare(issuer common.Address, key_share_G1 [2]*big.Int, key_share_G1_correctness_proof [2]*big.Int, key_share_G2 [4]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.SubmitKeyShare(&_Ethdkg.TransactOpts, issuer, key_share_G1, key_share_G1_correctness_proof, key_share_G2)
}

// SubmitKeyShare is a paid mutator transaction binding the contract method 0x7163525e.
//
// Solidity: function submit_key_share(address issuer, uint256[2] key_share_G1, uint256[2] key_share_G1_correctness_proof, uint256[4] key_share_G2) returns()
func (_Ethdkg *EthdkgTransactorSession) SubmitKeyShare(issuer common.Address, key_share_G1 [2]*big.Int, key_share_G1_correctness_proof [2]*big.Int, key_share_G2 [4]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.SubmitKeyShare(&_Ethdkg.TransactOpts, issuer, key_share_G1, key_share_G1_correctness_proof, key_share_G2)
}

// SubmitMasterPublicKey is a paid mutator transaction binding the contract method 0xf47ae6a9.
//
// Solidity: function submit_master_public_key(uint256[4] _master_public_key) returns()
func (_Ethdkg *EthdkgTransactor) SubmitMasterPublicKey(opts *bind.TransactOpts, _master_public_key [4]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.contract.Transact(opts, "submit_master_public_key", _master_public_key)
}

// SubmitMasterPublicKey is a paid mutator transaction binding the contract method 0xf47ae6a9.
//
// Solidity: function submit_master_public_key(uint256[4] _master_public_key) returns()
func (_Ethdkg *EthdkgSession) SubmitMasterPublicKey(_master_public_key [4]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.SubmitMasterPublicKey(&_Ethdkg.TransactOpts, _master_public_key)
}

// SubmitMasterPublicKey is a paid mutator transaction binding the contract method 0xf47ae6a9.
//
// Solidity: function submit_master_public_key(uint256[4] _master_public_key) returns()
func (_Ethdkg *EthdkgTransactorSession) SubmitMasterPublicKey(_master_public_key [4]*big.Int) (*types.Transaction, error) {
	return _Ethdkg.Contract.SubmitMasterPublicKey(&_Ethdkg.TransactOpts, _master_public_key)
}

// EthdkgDisputeIterator is returned from FilterDispute and is used to iterate over the raw logs and unpacked data for Dispute events raised by the Ethdkg contract.
type EthdkgDisputeIterator struct {
	Event *EthdkgDispute // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *EthdkgDisputeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(EthdkgDispute)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(EthdkgDispute)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *EthdkgDisputeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *EthdkgDisputeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// EthdkgDispute represents a Dispute event raised by the Ethdkg contract.
type EthdkgDispute struct {
	Issuer                    common.Address
	Disputer                  common.Address
	SharedKey                 [2]*big.Int
	SharedKeyCorrectnessProof [2]*big.Int
	Raw                       types.Log // Blockchain specific contextual infos
}

// FilterDispute is a free log retrieval operation binding the contract event 0xad88e924a254a8563c3f1c2ec3ba397eb38279116fed134720febaeb0d3f6021.
//
// Solidity: event Dispute(address issuer, address disputer, uint256[2] shared_key, uint256[2] shared_key_correctness_proof)
func (_Ethdkg *EthdkgFilterer) FilterDispute(opts *bind.FilterOpts) (*EthdkgDisputeIterator, error) {

	logs, sub, err := _Ethdkg.contract.FilterLogs(opts, "Dispute")
	if err != nil {
		return nil, err
	}
	return &EthdkgDisputeIterator{contract: _Ethdkg.contract, event: "Dispute", logs: logs, sub: sub}, nil
}

// WatchDispute is a free log subscription operation binding the contract event 0xad88e924a254a8563c3f1c2ec3ba397eb38279116fed134720febaeb0d3f6021.
//
// Solidity: event Dispute(address issuer, address disputer, uint256[2] shared_key, uint256[2] shared_key_correctness_proof)
func (_Ethdkg *EthdkgFilterer) WatchDispute(opts *bind.WatchOpts, sink chan<- *EthdkgDispute) (event.Subscription, error) {

	logs, sub, err := _Ethdkg.contract.WatchLogs(opts, "Dispute")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(EthdkgDispute)
				if err := _Ethdkg.contract.UnpackLog(event, "Dispute", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDispute is a log parse operation binding the contract event 0xad88e924a254a8563c3f1c2ec3ba397eb38279116fed134720febaeb0d3f6021.
//
// Solidity: event Dispute(address issuer, address disputer, uint256[2] shared_key, uint256[2] shared_key_correctness_proof)
func (_Ethdkg *EthdkgFilterer) ParseDispute(log types.Log) (*EthdkgDispute, error) {
	event := new(EthdkgDispute)
	if err := _Ethdkg.contract.UnpackLog(event, "Dispute", log); err != nil {
		return nil, err
	}
	return event, nil
}

// EthdkgKeyShareSubmissionIterator is returned from FilterKeyShareSubmission and is used to iterate over the raw logs and unpacked data for KeyShareSubmission events raised by the Ethdkg contract.
type EthdkgKeyShareSubmissionIterator struct {
	Event *EthdkgKeyShareSubmission // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *EthdkgKeyShareSubmissionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(EthdkgKeyShareSubmission)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(EthdkgKeyShareSubmission)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *EthdkgKeyShareSubmissionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *EthdkgKeyShareSubmissionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// EthdkgKeyShareSubmission represents a KeyShareSubmission event raised by the Ethdkg contract.
type EthdkgKeyShareSubmission struct {
	Issuer                     common.Address
	KeyShareG1                 [2]*big.Int
	KeyShareG1CorrectnessProof [2]*big.Int
	KeyShareG2                 [4]*big.Int
	Raw                        types.Log // Blockchain specific contextual infos
}

// FilterKeyShareSubmission is a free log retrieval operation binding the contract event 0xb0ee36c3780de716eb6c83687f433ae2558a6923e090fd238b657fb6c896badc.
//
// Solidity: event KeyShareSubmission(address issuer, uint256[2] key_share_G1, uint256[2] key_share_G1_correctness_proof, uint256[4] key_share_G2)
func (_Ethdkg *EthdkgFilterer) FilterKeyShareSubmission(opts *bind.FilterOpts) (*EthdkgKeyShareSubmissionIterator, error) {

	logs, sub, err := _Ethdkg.contract.FilterLogs(opts, "KeyShareSubmission")
	if err != nil {
		return nil, err
	}
	return &EthdkgKeyShareSubmissionIterator{contract: _Ethdkg.contract, event: "KeyShareSubmission", logs: logs, sub: sub}, nil
}

// WatchKeyShareSubmission is a free log subscription operation binding the contract event 0xb0ee36c3780de716eb6c83687f433ae2558a6923e090fd238b657fb6c896badc.
//
// Solidity: event KeyShareSubmission(address issuer, uint256[2] key_share_G1, uint256[2] key_share_G1_correctness_proof, uint256[4] key_share_G2)
func (_Ethdkg *EthdkgFilterer) WatchKeyShareSubmission(opts *bind.WatchOpts, sink chan<- *EthdkgKeyShareSubmission) (event.Subscription, error) {

	logs, sub, err := _Ethdkg.contract.WatchLogs(opts, "KeyShareSubmission")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(EthdkgKeyShareSubmission)
				if err := _Ethdkg.contract.UnpackLog(event, "KeyShareSubmission", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseKeyShareSubmission is a log parse operation binding the contract event 0xb0ee36c3780de716eb6c83687f433ae2558a6923e090fd238b657fb6c896badc.
//
// Solidity: event KeyShareSubmission(address issuer, uint256[2] key_share_G1, uint256[2] key_share_G1_correctness_proof, uint256[4] key_share_G2)
func (_Ethdkg *EthdkgFilterer) ParseKeyShareSubmission(log types.Log) (*EthdkgKeyShareSubmission, error) {
	event := new(EthdkgKeyShareSubmission)
	if err := _Ethdkg.contract.UnpackLog(event, "KeyShareSubmission", log); err != nil {
		return nil, err
	}
	return event, nil
}

// EthdkgShareDistributionIterator is returned from FilterShareDistribution and is used to iterate over the raw logs and unpacked data for ShareDistribution events raised by the Ethdkg contract.
type EthdkgShareDistributionIterator struct {
	Event *EthdkgShareDistribution // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *EthdkgShareDistributionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(EthdkgShareDistribution)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(EthdkgShareDistribution)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *EthdkgShareDistributionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *EthdkgShareDistributionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// EthdkgShareDistribution represents a ShareDistribution event raised by the Ethdkg contract.
type EthdkgShareDistribution struct {
	Issuer          common.Address
	EncryptedShares []*big.Int
	Commitments     [][2]*big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterShareDistribution is a free log retrieval operation binding the contract event 0x92d8d3649e1b955ecb304c5fdd720088e7ec87cb18b50a75616b12600f455c6b.
//
// Solidity: event ShareDistribution(address issuer, uint256[] encrypted_shares, uint256[2][] commitments)
func (_Ethdkg *EthdkgFilterer) FilterShareDistribution(opts *bind.FilterOpts) (*EthdkgShareDistributionIterator, error) {

	logs, sub, err := _Ethdkg.contract.FilterLogs(opts, "ShareDistribution")
	if err != nil {
		return nil, err
	}
	return &EthdkgShareDistributionIterator{contract: _Ethdkg.contract, event: "ShareDistribution", logs: logs, sub: sub}, nil
}

// WatchShareDistribution is a free log subscription operation binding the contract event 0x92d8d3649e1b955ecb304c5fdd720088e7ec87cb18b50a75616b12600f455c6b.
//
// Solidity: event ShareDistribution(address issuer, uint256[] encrypted_shares, uint256[2][] commitments)
func (_Ethdkg *EthdkgFilterer) WatchShareDistribution(opts *bind.WatchOpts, sink chan<- *EthdkgShareDistribution) (event.Subscription, error) {

	logs, sub, err := _Ethdkg.contract.WatchLogs(opts, "ShareDistribution")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(EthdkgShareDistribution)
				if err := _Ethdkg.contract.UnpackLog(event, "ShareDistribution", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseShareDistribution is a log parse operation binding the contract event 0x92d8d3649e1b955ecb304c5fdd720088e7ec87cb18b50a75616b12600f455c6b.
//
// Solidity: event ShareDistribution(address issuer, uint256[] encrypted_shares, uint256[2][] commitments)
func (_Ethdkg *EthdkgFilterer) ParseShareDistribution(log types.Log) (*EthdkgShareDistribution, error) {
	event := new(EthdkgShareDistribution)
	if err := _Ethdkg.contract.UnpackLog(event, "ShareDistribution", log); err != nil {
		return nil, err
	}
	return event, nil
}
